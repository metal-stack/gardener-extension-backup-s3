apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  namespace: {{ .Release.Namespace }}
{{-  if .Values.ignoreResources }}
  annotations:
    resources.gardener.cloud/ignore: "true"
{{- end }}
  labels:
    {{- include "labels" . | nindent 4 }}
  high-availability-config.resources.gardener.cloud/type: server
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }}
  template:
    metadata:
      annotations:
        checksum/configmap-{{ include "name" . }}-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if and .Values.metrics.enableScraping }}
        prometheus.io/name: "{{ .Release.Name }}"
        prometheus.io/scrape: "true"
        # default metrics endpoint in controller-runtime
        prometheus.io/port: "{{ .Values.metricsPort }}"
        {{- end }}
      labels:
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.resources.gardener.cloud/to-all-shoots-kube-apiserver-tcp-443: allowed
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
      {{- if (include "runtimeCluster.enabled" .) }}
      priorityClassName: {{ .Values.gardener.runtimeCluster.priorityClassName }}
      {{- else }}
      priorityClassName: gardener-system-900
      {{- end }}
      serviceAccountName: {{ include "fullname" . }}
      containers:
      - name: {{ include "name" . }}
        image: {{ include "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /gardener-extension-backup-s3
        - --backupbucket-max-concurrent-reconciles={{ .Values.controllers.backupbucket.concurrentSyncs }}
        - --backupentry-max-concurrent-reconciles={{ .Values.controllers.backupentry.concurrentSyncs }}
        - --config-file=/etc/{{ include "name" . }}/config/config.yaml
        - --heartbeat-namespace={{ .Release.Namespace }}
        - --heartbeat-renew-interval-seconds={{ .Values.controllers.heartbeat.renewIntervalSeconds }}
        - --ignore-operation-annotation={{ .Values.controllers.ignoreOperationAnnotation }}
        {{- if (include "runtimeCluster.enabled" .) }}
        - --controllers=backupbucket
        - --extension-class=garden
        {{- else }}
        - --disable-controllers={{ .Values.disableControllers | join "," }}
        {{- end }}
        {{- if .Values.metricsPort }}
        - --metrics-bind-address=:{{ .Values.metricsPort }}
        {{- end }}
        - --health-bind-address=:{{ .Values.healthPort }}
        - --gardener-version={{ .Values.gardener.version }}
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 5
{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | nindent 10 }}
{{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/{{ include "name" . }}/config
      volumes:
      - name: config
        configMap:
          name: {{ include "fullname" . }}-configmap
          defaultMode: 420
